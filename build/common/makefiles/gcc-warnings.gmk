#
#
#
# Copyright  1990-2007 Sun Microsystems, Inc. All Rights Reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License version
# 2 only, as published by the Free Software Foundation.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License version 2 for more details (a copy is
# included at /legal/license.txt).
# 
# You should have received a copy of the GNU General Public License
# version 2 along with this work; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
# 02110-1301 USA
# 
# Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa
# Clara, CA 95054 or visit www.sun.com if you need additional
# information or have any questions.
#
######################################################################
#
# GCC warnings
#
######################################################################
#
# Newer GCC versions usually issue more warnings about suspicious
# places in the code. Often it is easy to modify the code
# so that the warning disappears, while sometimes the code is correct,
# but a serious refactoring is required to avoid the warning.
# Because of the "warnings as errors" policy of the project,
# we need a way to selectively disable some warnings.
# In particular, we need to disable -Wuninitialized because we
# do not want to add unnecessary initialization of arrays
# in the code that affects performance.

ifneq ($(GCC_WARNINGS_TUNED),true)

# just all+extra warnings
GCC_WARNING_FLAGS = -W -Wall

else

# select warnings that cause no problems with GCC vrsion >= 4.2

# common for C and C++, normally enabled by -Wall:
GCC_WALL = -Waddress -Warray-bounds -Wchar-subscripts -Wcomment -Wformat \
    -Wmain -Wmissing-braces -Wparentheses -Wreturn-type -Wsequence-point \
    -Wsign-compare -Wstrict-aliasing -Wstrict-overflow=1 -Wswitch \
    -Wtrigraphs -Wunknown-pragmas -Wunused-function -Wunused-label \
    -Wunused-value -Wunused-variable

# common for C and C++, normally enabled by -Wextra (same as -W):
GCC_WEXTRA = -Wclobbered -Wempty-body -Wignored-qualifiers \
    -Wmissing-field-initializers -Wsign-compare -Wtype-limits -Wunused-parameter

# C++ only:
GCC_CPP_ONLY_W = -Wc++0x-compat -Wreorder

# C only:
GCC_C_ONLY_W = -Wimplicit-int -Wimplicit-function-declaration -Wnonnull \
    -Wpointer-sign -Wmissing-parameter-type -Wold-style-declaration \
    -Woverride-init 

# disabled:
# -Wuninitialized 

GCC_WARNING_FLAGS = $(GCC_WALL) $(GCC_WEXTRA) -fdiagnostics-show-option

endif


CONLYFLAGS += $(GCC_C_ONLY_W)

EXTRA_CPPFLAGS += $(GCC_CPP_ONLY_W)

EXTRA_CFLAGS += $(GCC_WARNING_FLAGS)

